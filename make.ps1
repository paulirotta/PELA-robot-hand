# PELA Robot Hand
# PELA - 3D Printed LEGO-compatible parametric blocks
#
# Generate a set of objects calibrated by changes to PELA-print-parameters.scad
# See http://robothand.PELAblocks.org for more information
#
# Part of https://github.com/paulirotta/PELA-robot-hand
#
# To use:
# 1. Install and add OpenSCAD and Meshlab to your path
# 1. Open Windows Powershell
# 2. make -png -clean -stl -publish
#
# -stl generates part shapes
# -png generates images, which may not be necessary for your use
# -clean cleans up the messy STL files generated by OpenSCAD before converting them to binary (1/3 the space)
# -publish posts your updates to git and the web
 
param (
    [switch]$stl = $false,
    [switch]$png = $false,
    [switch]$clean = $false,
    [switch]$publish = $false
)

Function FormatElapsedTime($ts) {
    $elapsedTime = ""

    if ( $ts.Minutes -gt 0 ) {
        $elapsedTime = [string]::Format( "{0:00}m {1:00}.{2:00}s", $ts.Minutes, $ts.Seconds, $ts.Milliseconds / 10 );
    }
    else {
        $elapsedTime = [string]::Format( "{0:00}.{1:00}s", $ts.Seconds, $ts.Milliseconds / 10 );
    }

    if ($ts.Hours -eq 0 -and $ts.Minutes -eq 0 -and $ts.Seconds -eq 0) {
        $elapsedTime = [string]::Format("{0:00}ms", $ts.Milliseconds);
    }

    if ($ts.Milliseconds -eq 0) {
        $elapsedTime = [string]::Format("{0}ms", $ts.TotalMilliseconds);
    }

    return $elapsedTime
}


Function render($name, $outname, $d) {
    Write-Output ""
    $start = Get-Date
    if ($stl) {
        Write-Output "Render $outname as STL"
        Write-Output $start        
        Invoke-Expression "openscad -o $outname.stl $name.scad -D `"$d`""
        $elapsed = FormatElapsedTime ((Get-Date) - $start)
        Write-Output "STL Render time: $elapsed for $name"
        Write-Output ""    
    }

    if ($clean) {
        Invoke-Expression ".\PELA-blocks\clean.ps1 $outname.stl"
    }

    if ($png) {
        Write-Output Get-Date
        render-png $name $outname $d
    }
}


Function render-png($name, $outname, $d) {
    Write-Output "Render $outname as PNG"
    $start = Get-Date
    Invoke-Expression "openscad --render -o $outname.png $name.scad -D `"$d`""
    $elapsed = FormatElapsedTime ((Get-Date) - $start)
    Write-Output "PNG Render time: $elapsed for $outname"
    Write-Output ""        
}


Write-Output ""
Write-Output "Generating PELA Robot Hand"
Write-Output "=========================="
Get-Date

if ($stl) {
    Write-Output ""
    Write-Output "Removing old STL files"
    Get-ChildItem *.stl | Remove-Item
}

if ($png) {
    Write-Output "Removing old PNG files"
    Get-ChildItem *.png | Remove-Item
    Get-ChildItem .\docs\*.png | Remove-Item    
}
Write-Output ""

render .\PELA-robot-hand .\PELA-robot-hand "full_hand=true;"

if ($png) {
    Write-Output "Moving PNG Images to /docs"
    Move-Item *.png .\docs
}

Get-Date

if ($publish) {
    Write-Output "Publishing PELA Robot Hand"
    Write-Output "=========================="
    git status
    git add *.scad
    git add *.png
    git add *.stl
    git commit -m "Publish"
    Write-Output "Pushing to server"
    git push
    git status
}
